name: CI/CD Pipeline

on:
   push:
      branches: [main]
   pull_request:
      branches: [main]

jobs:
   lint:
      name: Lint
      runs-on: ubuntu-latest
      steps:
         - uses: actions/checkout@v3

         - name: Set up Node.js
           uses: actions/setup-node@v3
           with:
              node-version: '22'
              cache: 'npm'

         - name: Install dependencies
           run: npm ci --legacy-peer-deps

         - name: Run linting
           run: npm run lint

   test:
      name: Test
      runs-on: ubuntu-latest
      needs: lint
      steps:
         - uses: actions/checkout@v3

         - name: Set up Node.js
           uses: actions/setup-node@v3
           with:
              node-version: '22'
              cache: 'npm'

         - name: Install dependencies
           run: npm ci --legacy-peer-deps

         - name: Run tests
           run: npm test

   build:
      name: Build
      runs-on: ubuntu-latest
      needs: test
      steps:
         - uses: actions/checkout@v3

         - name: Set up Node.js
           uses: actions/setup-node@v3
           with:
              node-version: '22'
              cache: 'npm'

         - name: Install dependencies
           run: npm ci --legacy-peer-deps

         - name: Build application
           run: npm run build
           env:
              NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
              NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
              DATABASE_URL: ${{ secrets.DATABASE_URL }}
              GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
              GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
              GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
              GITHUB_CLIENT_SECRET: ${{ secrets.GITHUB_CLIENT_SECRET }}
              UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
              UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}

   migrate:
      name: Database Migration
      runs-on: ubuntu-latest
      needs: build
      if: github.ref == 'refs/heads/main'
      steps:
         - uses: actions/checkout@v3

         - name: Set up Node.js
           uses: actions/setup-node@v3
           with:
              node-version: '22'
              cache: 'npm'

         - name: Install dependencies
           run: npm ci --legacy-peer-deps

         - name: Run migrations
           run: npx prisma migrate deploy
           env:
              DATABASE_URL: ${{ secrets.DATABASE_URL }}

   deploy:
      name: Deploy
      runs-on: ubuntu-latest
      needs: migrate
      if: github.ref == 'refs/heads/main'
      steps:
         - uses: actions/checkout@v3

         - name: Deploy to Vercel
           uses: amondnet/vercel-action@v20
           with:
              vercel-token: ${{ secrets.VERCEL_TOKEN }}
              zeit-token: ${{ secrets.VERCEL_TOKEN }}
              vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
              vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
              vercel-args: '--prod'
